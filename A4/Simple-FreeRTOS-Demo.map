ARM Linker, 5.02 [Build 28] [MDK-ARM Lite]

==============================================================================

Section Cross References

    startup_mps_cm3.o(RESET) refers to startup_mps_cm3.o(STACK) for __initial_sp
    startup_mps_cm3.o(RESET) refers to startup_mps_cm3.o(.text) for Reset_Handler
    startup_mps_cm3.o(RESET) refers to port.o(.emb_text) for vPortSVCHandler
    startup_mps_cm3.o(RESET) refers to port.o(.text) for xPortSysTickHandler
    startup_mps_cm3.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    main.o(.text) refers to tasks.o(.text) for xTaskGetTickCount
    main.o(.text) refers to queue.o(.text) for xQueueGenericSend
    main.o(.text) refers to printf5.o(i.__0printf$5) for __2printf
    main.o(.text) refers to main.o(.data) for xQueue
    tasks.o(.text) refers to list.o(.text) for vListInitialise
    tasks.o(.text) refers to strncpy.o(.text) for strncpy
    tasks.o(.text) refers to heap_1.o(.text) for pvPortMalloc
    tasks.o(.text) refers to memseta.o(.text) for __aeabi_memset
    tasks.o(.text) refers to port.o(.text) for pxPortInitialiseStack
    tasks.o(.text) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(.text) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(.text) refers to port.o(.emb_text) for vPortSetInterruptMask
    tasks.o(.text) refers to printf5.o(i.__0sprintf$5) for __2sprintf
    tasks.o(.text) refers to strcat.o(.text) for strcat
    tasks.o(.text) refers to main.o(.bss) for ulTaskNumber
    queue.o(.text) refers to port.o(.text) for vPortEnterCritical
    queue.o(.text) refers to tasks.o(.text) for xTaskRemoveFromEventList
    queue.o(.text) refers to list.o(.text) for vListInitialise
    queue.o(.text) refers to heap_1.o(.text) for pvPortMalloc
    queue.o(.text) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.text) refers to port.o(.emb_text) for vPortSetInterruptMask
    port.o(.emb_text) refers to tasks.o(.text) for vTaskSwitchContext
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(.text) refers to port.o(.emb_text) for vPortStartFirstTask
    port.o(.text) refers to tasks.o(.text) for vTaskIncrementTick
    port.o(.text) refers to port.o(.data) for uxCriticalNesting
    heap_1.o(.text) refers to tasks.o(.text) for vTaskSuspendAll
    heap_1.o(.text) refers to heap_1.o(.data) for xNextFreeByte
    heap_1.o(.text) refers to heap_1.o(.bss) for xHeap
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8.o(.ARM.Collect$$$$00000009) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to main.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to main.o(.text) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to main.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to main.o(.text) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to main.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to main.o(.text) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to main.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to main.o(.text) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to main.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to main.o(.text) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to main.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to main.o(.text) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to main.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to main.o(.text) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to main.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to main.o(.text) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to main.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to main.o(.text) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to main.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to main.o(.text) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to main.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to main.o(.text) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to main.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to main.o(.text) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to main.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to main.o(.text) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to main.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to main.o(.text) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to main.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to main.o(.text) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to main.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to main.o(.text) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to main.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to main.o(.text) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to main.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to main.o(.text) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to main.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to main.o(.text) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to main.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to main.o(.text) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to main.o(.text) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to main.o(.text) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to main.o(.text) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to main.o(.text) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_mps_cm3.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_mps_cm3.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry8.o(.ARM.Collect$$$$00000009) refers to main.o(.text) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing startup_mps_cm3.o(HEAP), (0 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (40 bytes).
    Removing depilogue.o(.text), (190 bytes).

7 unused section(s) (total 1062 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      192  startup_mps_cm3.o(RESET)
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  stubs.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcat.c         0x00000000   Number         0  strcat.o ABSOLUTE
    ../clib/microlib/string/strncpy.c        0x00000000   Number         0  strncpy.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    FreeRTOS-Source\\portable\\RVDS\\ARM_CM3\\port.c 0x00000000   Number         0  port.o ABSOLUTE
    FreeRTOS-Source\list.c                   0x00000000   Number         0  list.o ABSOLUTE
    FreeRTOS-Source\portable\MemMang\heap_1.c 0x00000000   Number         0  heap_1.o ABSOLUTE
    FreeRTOS-Source\portable\RVDS\ARM_CM3\port.c 0x00000000   Number         0  port.o ABSOLUTE
    FreeRTOS-Source\queue.c                  0x00000000   Number         0  queue.o ABSOLUTE
    FreeRTOS-Source\tasks.c                  0x00000000   Number         0  tasks.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    startup_MPS_CM3.s                        0x00000000   Number         0  startup_mps_cm3.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000c0   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000c0   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000c4   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000c8   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$00000009                 0x000000c8   Section        8  entry8.o(.ARM.Collect$$$$00000009)
    .ARM.Collect$$$$00002712                 0x000000d0   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000d0   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .emb_text                                0x000000d4   Section      132  port.o(.emb_text)
    .text                                    0x00000158   Section       28  startup_mps_cm3.o(.text)
    .text                                    0x00000174   Section        0  main.o(.text)
    prvQueueSendTask                         0x00000175   Thumb Code    38  main.o(.text)
    prvQueueReceiveTask                      0x0000019b   Thumb Code    48  main.o(.text)
    .text                                    0x00000294   Section        0  tasks.o(.text)
    prvInitialiseTaskLists                   0x00000295   Thumb Code    58  tasks.o(.text)
    prvInitialiseTCBVariables                0x000002cf   Thumb Code    68  tasks.o(.text)
    prvAllocateTCBAndStack                   0x00000313   Thumb Code    58  tasks.o(.text)
    prvAddCurrentTaskToDelayedList           0x000005e9   Thumb Code    62  tasks.o(.text)
    prvCheckTasksWaitingTermination          0x0000076b   Thumb Code     2  tasks.o(.text)
    prvIdleTask                              0x0000076d   Thumb Code     8  tasks.o(.text)
    usTaskCheckFreeStackSpace                0x000007e7   Thumb Code    22  tasks.o(.text)
    prvListTaskWithinSingleList              0x000007fd   Thumb Code   116  tasks.o(.text)
    .text                                    0x00000ae8   Section        0  list.o(.text)
    .text                                    0x00000b7c   Section        0  queue.o(.text)
    prvUnlockQueue                           0x00000c37   Thumb Code   126  queue.o(.text)
    prvIsQueueFull                           0x00000cb5   Thumb Code    32  queue.o(.text)
    prvCopyDataToQueue                       0x00000cd5   Thumb Code    88  queue.o(.text)
    prvIsQueueEmpty                          0x00000e57   Thumb Code    28  queue.o(.text)
    prvCopyDataFromQueue                     0x00000e73   Thumb Code    42  queue.o(.text)
    .text                                    0x00001058   Section        0  port.o(.text)
    prvSetupTimerInterrupt                   0x00001073   Thumb Code    16  port.o(.text)
    .text                                    0x00001108   Section        0  heap_1.o(.text)
    .text                                    0x00001174   Section        0  memcpya.o(.text)
    .text                                    0x00001198   Section        0  memseta.o(.text)
    .text                                    0x000011bc   Section        0  strcat.o(.text)
    .text                                    0x000011d8   Section        0  strncpy.o(.text)
    .text                                    0x000011f0   Section        0  uldiv.o(.text)
    .text                                    0x00001254   Section       36  init.o(.text)
    .text                                    0x00001278   Section        0  llshl.o(.text)
    .text                                    0x00001296   Section        0  llushr.o(.text)
    i.__0printf$5                            0x000012b8   Section        0  printf5.o(i.__0printf$5)
    i.__0sprintf$5                           0x000012d8   Section        0  printf5.o(i.__0sprintf$5)
    i.__scatterload_copy                     0x00001300   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x0000130e   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00001310   Section       14  handlers.o(i.__scatterload_zeroinit)
    i._printf_core                           0x00001320   Section        0  printf5.o(i._printf_core)
    _printf_core                             0x00001321   Thumb Code   660  printf5.o(i._printf_core)
    i._sputc                                 0x000015e0   Section        0  printf5.o(i._sputc)
    _sputc                                   0x000015e1   Thumb Code    10  printf5.o(i._sputc)
    .data                                    0x20000000   Section        4  main.o(.data)
    xQueue                                   0x20000000   Data           4  main.o(.data)
    .data                                    0x20000004   Section       56  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x20000008   Data           4  tasks.o(.data)
    xTickCount                               0x2000000c   Data           4  tasks.o(.data)
    uxTopUsedPriority                        0x20000010   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x20000014   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000018   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x2000001c   Data           4  tasks.o(.data)
    uxMissedTicks                            0x20000020   Data           4  tasks.o(.data)
    xMissedYield                             0x20000024   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x20000028   Data           4  tasks.o(.data)
    uxTaskNumber                             0x2000002c   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x20000030   Data           4  tasks.o(.data)
    pxDelayedTaskList                        0x20000034   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x20000038   Data           4  tasks.o(.data)
    .data                                    0x2000003c   Section        4  port.o(.data)
    uxCriticalNesting                        0x2000003c   Data           4  port.o(.data)
    .data                                    0x20000040   Section        4  heap_1.o(.data)
    xNextFreeByte                            0x20000040   Data           4  heap_1.o(.data)
    .data                                    0x20000044   Section        4  stdout.o(.data)
    .bss                                     0x20000048   Section       12  main.o(.bss)
    .bss                                     0x20000054   Section      204  tasks.o(.bss)
    pcStatusString                           0x20000054   Data          42  tasks.o(.bss)
    pxReadyTasksLists                        0x20000080   Data         100  tasks.o(.bss)
    xDelayedTaskList1                        0x200000e4   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x200000f8   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x2000010c   Data          20  tasks.o(.bss)
    .bss                                     0x20000120   Section     2048  heap_1.o(.bss)
    xHeap                                    0x20000120   Data        2048  heap_1.o(.bss)
    STACK                                    0x20000920   Section      512  startup_mps_cm3.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_mps_cm3.o(RESET)
    _printf_a                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  stubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  stubs.o ABSOLUTE
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    __main                                   0x000000c1   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000c1   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000c5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000c9   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000c9   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_init                               0x000000c9   Thumb Code     0  entry8.o(.ARM.Collect$$$$00000009)
    vPortSVCHandler                          0x000000d5   Thumb Code    28  port.o(.emb_text)
    vPortStartFirstTask                      0x000000f5   Thumb Code    16  port.o(.emb_text)
    xPortPendSVHandler                       0x00000109   Thumb Code    56  port.o(.emb_text)
    vPortSetInterruptMask                    0x00000145   Thumb Code    10  port.o(.emb_text)
    vPortClearInterruptMask                  0x0000014f   Thumb Code    10  port.o(.emb_text)
    Reset_Handler                            0x00000159   Thumb Code     4  startup_mps_cm3.o(.text)
    NMI_Handler                              0x0000015d   Thumb Code     2  startup_mps_cm3.o(.text)
    HardFault_Handler                        0x0000015f   Thumb Code     2  startup_mps_cm3.o(.text)
    MemManage_Handler                        0x00000161   Thumb Code     2  startup_mps_cm3.o(.text)
    BusFault_Handler                         0x00000163   Thumb Code     2  startup_mps_cm3.o(.text)
    UsageFault_Handler                       0x00000165   Thumb Code     2  startup_mps_cm3.o(.text)
    SVC_Handler                              0x00000167   Thumb Code     2  startup_mps_cm3.o(.text)
    DebugMon_Handler                         0x00000169   Thumb Code     2  startup_mps_cm3.o(.text)
    PendSV_Handler                           0x0000016b   Thumb Code     2  startup_mps_cm3.o(.text)
    SysTick_Handler                          0x0000016d   Thumb Code     2  startup_mps_cm3.o(.text)
    AACI_IRQHandler                          0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    CAN_IRQHandler                           0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    CHLCD_IRQHandler                         0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    CLCD_IRQHandler                          0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    CPU_CLCD_IRQHandler                      0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    ENET_IRQHandler                          0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    FLEXRAY_IRQHandler                       0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    I2C_IRQHandler                           0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    LIN_IRQHandler                           0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    MCIA_IRQHandler                          0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    MCIB_IRQHandler                          0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    RTC_IRQHandler                           0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    SPI_IRQHandler                           0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    TIM0_IRQHandler                          0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    TIM2_IRQHandler                          0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    UART0_IRQHandler                         0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    UART1_IRQHandler                         0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    UART2_IRQHandler                         0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    UART3_IRQHandler                         0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    UART4_IRQHandler                         0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    USBDC_IRQHandler                         0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    USBHC_IRQHandler                         0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    WDT_IRQHandler                           0x0000016f   Thumb Code     0  startup_mps_cm3.o(.text)
    main                                     0x000001cb   Thumb Code    78  main.o(.text)
    fputc                                    0x00000219   Thumb Code    30  main.o(.text)
    xTaskGenericCreate                       0x0000034d   Thumb Code   248  tasks.o(.text)
    vTaskIncrementTick                       0x00000445   Thumb Code   230  tasks.o(.text)
    xTaskResumeAll                           0x0000052b   Thumb Code   190  tasks.o(.text)
    vTaskSuspendAll                          0x00000627   Thumb Code    12  tasks.o(.text)
    vTaskDelayUntil                          0x00000633   Thumb Code   224  tasks.o(.text)
    vTaskDelay                               0x00000713   Thumb Code    88  tasks.o(.text)
    vTaskStartScheduler                      0x00000775   Thumb Code    52  tasks.o(.text)
    vTaskEndScheduler                        0x000007a9   Thumb Code    18  tasks.o(.text)
    xTaskGetTickCount                        0x000007bb   Thumb Code    18  tasks.o(.text)
    xTaskGetTickCountFromISR                 0x000007cd   Thumb Code    20  tasks.o(.text)
    uxTaskGetNumberOfTasks                   0x000007e1   Thumb Code     6  tasks.o(.text)
    vTaskList                                0x00000871   Thumb Code   134  tasks.o(.text)
    vTaskSwitchContext                       0x000008f7   Thumb Code    96  tasks.o(.text)
    vTaskPlaceOnEventList                    0x00000957   Thumb Code    82  tasks.o(.text)
    xTaskRemoveFromEventList                 0x000009a9   Thumb Code    98  tasks.o(.text)
    vTaskSetTimeOutState                     0x00000a0b   Thumb Code    14  tasks.o(.text)
    xTaskCheckForTimeOut                     0x00000a19   Thumb Code    82  tasks.o(.text)
    vTaskMissedYield                         0x00000a6b   Thumb Code     8  tasks.o(.text)
    uxTaskGetTaskNumber                      0x00000a73   Thumb Code    14  tasks.o(.text)
    vTaskSetTaskNumber                       0x00000a81   Thumb Code     8  tasks.o(.text)
    vListInitialise                          0x00000ae9   Thumb Code    26  list.o(.text)
    vListInitialiseItem                      0x00000b03   Thumb Code     6  list.o(.text)
    vListInsertEnd                           0x00000b09   Thumb Code    28  list.o(.text)
    vListInsert                              0x00000b25   Thumb Code    52  list.o(.text)
    vListRemove                              0x00000b59   Thumb Code    36  list.o(.text)
    xQueueGenericReset                       0x00000b7d   Thumb Code   108  queue.o(.text)
    xQueueGenericCreate                      0x00000be9   Thumb Code    78  queue.o(.text)
    xQueueGenericSend                        0x00000d2d   Thumb Code   202  queue.o(.text)
    xQueueGenericSendFromISR                 0x00000df7   Thumb Code    96  queue.o(.text)
    xQueueGenericReceive                     0x00000e9d   Thumb Code   248  queue.o(.text)
    xQueueReceiveFromISR                     0x00000f95   Thumb Code    94  queue.o(.text)
    uxQueueMessagesWaiting                   0x00000ff3   Thumb Code    18  queue.o(.text)
    uxQueueMessagesWaitingFromISR            0x00001005   Thumb Code     6  queue.o(.text)
    vQueueDelete                             0x0000100b   Thumb Code    18  queue.o(.text)
    ucQueueGetQueueNumber                    0x0000101d   Thumb Code     8  queue.o(.text)
    vQueueSetQueueNumber                     0x00001025   Thumb Code     6  queue.o(.text)
    ucQueueGetQueueType                      0x0000102b   Thumb Code     8  queue.o(.text)
    xQueueIsQueueEmptyFromISR                0x00001033   Thumb Code    16  queue.o(.text)
    xQueueIsQueueFullFromISR                 0x00001043   Thumb Code    20  queue.o(.text)
    pxPortInitialiseStack                    0x00001059   Thumb Code    26  port.o(.text)
    xPortStartScheduler                      0x00001083   Thumb Code    42  port.o(.text)
    vPortEndScheduler                        0x000010ad   Thumb Code     2  port.o(.text)
    vPortYieldFromISR                        0x000010af   Thumb Code    12  port.o(.text)
    vPortEnterCritical                       0x000010bb   Thumb Code    18  port.o(.text)
    vPortExitCritical                        0x000010cd   Thumb Code    24  port.o(.text)
    xPortSysTickHandler                      0x000010e5   Thumb Code    28  port.o(.text)
    pvPortMalloc                             0x00001109   Thumb Code    78  heap_1.o(.text)
    vPortFree                                0x00001157   Thumb Code     2  heap_1.o(.text)
    vPortInitialiseBlocks                    0x00001159   Thumb Code     8  heap_1.o(.text)
    xPortGetFreeHeapSize                     0x00001161   Thumb Code    10  heap_1.o(.text)
    __aeabi_memcpy                           0x00001175   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00001175   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00001175   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x00001199   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x00001199   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x00001199   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000011a7   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000011a7   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000011a7   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000011ab   Thumb Code    18  memseta.o(.text)
    strcat                                   0x000011bd   Thumb Code    28  strcat.o(.text)
    strncpy                                  0x000011d9   Thumb Code    24  strncpy.o(.text)
    __aeabi_uldivmod                         0x000011f1   Thumb Code    98  uldiv.o(.text)
    __scatterload                            0x00001255   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00001255   Thumb Code     0  init.o(.text)
    __aeabi_llsl                             0x00001279   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x00001279   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x00001297   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x00001297   Thumb Code     0  llushr.o(.text)
    __0printf$5                              0x000012b9   Thumb Code    22  printf5.o(i.__0printf$5)
    __1printf$5                              0x000012b9   Thumb Code     0  printf5.o(i.__0printf$5)
    __2printf                                0x000012b9   Thumb Code     0  printf5.o(i.__0printf$5)
    __0sprintf$5                             0x000012d9   Thumb Code    34  printf5.o(i.__0sprintf$5)
    __1sprintf$5                             0x000012d9   Thumb Code     0  printf5.o(i.__0sprintf$5)
    __2sprintf                               0x000012d9   Thumb Code     0  printf5.o(i.__0sprintf$5)
    __scatterload_copy                       0x00001301   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x0000130f   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00001311   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x000015ec   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0000160c   Number         0  anon$$obj.o(Region$$Table)
    pxCurrentTCB                             0x20000004   Data           4  tasks.o(.data)
    __stdout                                 0x20000044   Data           4  stdout.o(.data)
    ulTaskNumber                             0x20000048   Data          12  main.o(.bss)
    __initial_sp                             0x20000b20   Data           0  startup_mps_cm3.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000c1

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00001654, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x0000160c, Max: 0x00040000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x000000c0   Data   RO            3    RESET               startup_mps_cm3.o
    0x000000c0   0x00000000   Code   RO          166  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x000000c0   0x00000004   Code   RO          440    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x000000c4   0x00000004   Code   RO          443    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000000c8   0x00000000   Code   RO          445    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000000c8   0x00000008   Code   RO          446    .ARM.Collect$$$$00000009  mc_w.l(entry8.o)
    0x000000d0   0x00000004   Code   RO          441    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x000000d4   0x00000084   Code   RO          133    .emb_text           port.o
    0x00000158   0x0000001c   Code   RO            4    .text               startup_mps_cm3.o
    0x00000174   0x00000120   Code   RO           10    .text               main.o
    0x00000294   0x00000854   Code   RO           61    .text               tasks.o
    0x00000ae8   0x00000094   Code   RO          100    .text               list.o
    0x00000b7c   0x000004da   Code   RO          118    .text               queue.o
    0x00001056   0x00000002   PAD
    0x00001058   0x000000b0   Code   RO          134    .text               port.o
    0x00001108   0x0000006c   Code   RO          151    .text               heap_1.o
    0x00001174   0x00000024   Code   RO          169    .text               mc_w.l(memcpya.o)
    0x00001198   0x00000024   Code   RO          171    .text               mc_w.l(memseta.o)
    0x000011bc   0x0000001c   Code   RO          173    .text               mc_w.l(strcat.o)
    0x000011d8   0x00000018   Code   RO          175    .text               mc_w.l(strncpy.o)
    0x000011f0   0x00000062   Code   RO          450    .text               mc_w.l(uldiv.o)
    0x00001252   0x00000002   PAD
    0x00001254   0x00000024   Code   RO          463    .text               mc_w.l(init.o)
    0x00001278   0x0000001e   Code   RO          465    .text               mc_w.l(llshl.o)
    0x00001296   0x00000020   Code   RO          467    .text               mc_w.l(llushr.o)
    0x000012b6   0x00000002   PAD
    0x000012b8   0x00000020   Code   RO          312    i.__0printf$5       mc_w.l(printf5.o)
    0x000012d8   0x00000028   Code   RO          314    i.__0sprintf$5      mc_w.l(printf5.o)
    0x00001300   0x0000000e   Code   RO          475    i.__scatterload_copy  mc_w.l(handlers.o)
    0x0000130e   0x00000002   Code   RO          476    i.__scatterload_null  mc_w.l(handlers.o)
    0x00001310   0x0000000e   Code   RO          477    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x0000131e   0x00000002   PAD
    0x00001320   0x000002c0   Code   RO          319    i._printf_core      mc_w.l(printf5.o)
    0x000015e0   0x0000000a   Code   RO          321    i._sputc            mc_w.l(printf5.o)
    0x000015ea   0x00000002   PAD
    0x000015ec   0x00000020   Data   RO          473    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000b20, Max: 0x00010000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000004   Data   RW           12    .data               main.o
    0x20000004   0x00000038   Data   RW           63    .data               tasks.o
    0x2000003c   0x00000004   Data   RW          135    .data               port.o
    0x20000040   0x00000004   Data   RW          153    .data               heap_1.o
    0x20000044   0x00000004   Data   RW          447    .data               mc_w.l(stdout.o)
    0x20000048   0x0000000c   Zero   RW           11    .bss                main.o
    0x20000054   0x000000cc   Zero   RW           62    .bss                tasks.o
    0x20000120   0x00000800   Zero   RW          152    .bss                heap_1.o
    0x20000920   0x00000200   Zero   RW            1    STACK               startup_mps_cm3.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       108         10          0          4       2048       1684   heap_1.o
       148          0          0          0          0       2965   list.o
       288         94          0          4         12      12424   main.o
       308         20          0          4          0       2341   port.o
      1242          0          0          0          0       7602   queue.o
        28          4        192          0        512        716   startup_mps_cm3.o
      2132        170          0         56        204      11031   tasks.o

    ----------------------------------------------------------------------
      4256        298        224         68       2776      38763   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         2          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         8          4          0          0          0          0   entry8.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
       786         60          0          0          0        336   printf5.o
         0          0          0          4          0          0   stdout.o
        28          0          0          0          0         68   strcat.o
        24          0          0          0          0         76   strncpy.o
        98          0          0          0          0         92   uldiv.o

    ----------------------------------------------------------------------
      1164         76          0          4          0        952   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1156         76          0          4          0        952   mc_w.l

    ----------------------------------------------------------------------
      1164         76          0          4          0        952   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      5420        374        224         72       2776      38467   Grand Totals
      5420        374        224         72       2776      38467   ELF Image Totals
      5420        374        224         72          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 5644 (   5.51kB)
    Total RW  Size (RW Data + ZI Data)              2848 (   2.78kB)
    Total ROM Size (Code + RO Data + RW Data)       5716 (   5.58kB)

==============================================================================

